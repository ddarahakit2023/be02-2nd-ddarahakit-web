
jwt:
  secret-key: ${JWT_SECRET}
  token:
    expired-time-ms: ${JWT_EXPIRED_TIME}


imp:
  imp_key: ${IAMPORT_KEY}
  imp_secret: ${IAMPORT_SECRET}


spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: ${DB_DRIVER_CLASS_NAME}

  jpa:
    open-in-view: false
    database: mysql
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    show-sql: true


cloud:
  aws:
    s3:
      bucket: ${AWS_BUCKET_NAME}
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_REGION_NAME}
      auto: false
    stack:
      auto: false


logging:
  level:
    org.springframework.security: DEBUG